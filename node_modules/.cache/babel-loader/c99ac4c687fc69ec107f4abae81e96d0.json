{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Final_Project_CS490-8/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleLogin } from 'react-google-login'; // refresh token\n\nimport { refreshToken } from './refreshToken'; //this will configure the .env file in the application\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); //google cilent Id \n// This is to load your API keys from .env\n//const clientId = process.env.Google_clientID ;\n\n\nconst clientId = '808887656812-1tfa2ft0pom3hfttk2ol05ua8naklelk.apps.googleusercontent.com';\n\nfunction Login() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const responseGoogle = response => {\n    console.log(response);\n    setName(response.profileObj.name);\n    setEmail(response.profileObj.email);\n    setUrl(response.profileObj.imageUrl);\n    alert('Logged in successfully welcome!!!} 😍. \\n See console for full profile object.');\n    refreshToken(response);\n  };\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert('Failed to login. 😢 ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Username: \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Email \\uD83D\\uDCE7: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Login\",\n      onSuccess: responseGoogle,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"Uvpm6tvYmN+GVBePtxqSkPPBSBs=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ec2-user/environment/Final_Project_CS490-8/src/components/Login.js"],"names":["React","useState","GoogleLogin","refreshToken","require","config","clientId","Login","name","setName","email","setEmail","url","setUrl","responseGoogle","response","console","log","profileObj","imageUrl","alert","onFailure","res"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CAEA;;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CAEA;;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAE,0EAAhB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA7B;AAEA,QAAK,CAACS,KAAD,EAAOC,QAAP,IAAkBV,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAK,CAACW,GAAD,EAAKC,MAAL,IAAcZ,QAAQ,CAAC,EAAD,CAA3B;;AAEA,QAAMa,cAAc,GAAIC,QAAD,IAAc;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAN,IAAAA,OAAO,CAACM,QAAQ,CAACG,UAAT,CAAoBV,IAArB,CAAP;AAEAG,IAAAA,QAAQ,CAACI,QAAQ,CAACG,UAAT,CAAoBR,KAArB,CAAR;AAEAG,IAAAA,MAAM,CAACE,QAAQ,CAACG,UAAT,CAAoBC,QAArB,CAAN;AAGAC,IAAAA,KAAK,CACH,gFADG,CAAL;AAGAjB,IAAAA,YAAY,CAACY,QAAD,CAAZ;AACD,GAdD;;AAgBA,QAAMM,SAAS,GAAIC,GAAD,IAAS;AACzBN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,GAAlC;AACAF,IAAAA,KAAK,CACH,sBADG,CAAL;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,+BAAeZ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yCAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,GAAG,EAAEE,GAAV;AAAe,MAAA,GAAG,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAEQ,cAHb;AAIE,MAAA,SAAS,EAAEO,SAJb;AAKE,MAAA,YAAY,EAAE,oBALhB;AAME,MAAA,UAAU,EAAE;AANd;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhDQd,K;;KAAAA,K;AAkDT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\n// refresh token\nimport { refreshToken } from './refreshToken';\n\n//this will configure the .env file in the application\nrequire('dotenv').config();\n\n//google cilent Id \n// This is to load your API keys from .env\n//const clientId = process.env.Google_clientID ;\nconst clientId ='808887656812-1tfa2ft0pom3hfttk2ol05ua8naklelk.apps.googleusercontent.com';\n\nfunction Login() {\n  \n  const[name,setName]= useState(\"\");\n  \n  const[email,setEmail]= useState(\"\");\n  \n  const[url,setUrl]= useState(\"\");\n\n  const responseGoogle = (response) => {\n    console.log(response);\n    \n    setName(response.profileObj.name);\n    \n    setEmail(response.profileObj.email);\n    \n    setUrl(response.profileObj.imageUrl);\n    \n    \n    alert(\n      'Logged in successfully welcome!!!} 😍. \\n See console for full profile object.'\n    );\n    refreshToken(response);\n  };\n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n    alert(\n      'Failed to login. 😢 '\n    );\n  };\n\n  return (\n    <div>\n      <h1>Login with Google</h1>\n      <h2>Username: {name} </h2>\n      <h2>Email 📧: {email}</h2>\n      <img src={url} alt={name} />\n      \n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={responseGoogle}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}